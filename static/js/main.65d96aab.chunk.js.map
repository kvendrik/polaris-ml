{"version":3,"sources":["index.js"],"names":["detectObjectsInImage","imageNode","a","async","objectDetector","load","model","detect","predictions","console","log","rootElement","document","getElementById","ReactDOM","render","reader","useMemo","FileReader","imageRef","useRef","useState","image","setImage","handleImageChange","useCallback","selectedFile","target","files","readAsDataURL","useEffect","addEventListener","src","result","current","type","onChange","style","maxWidth","ref","alt"],"mappings":"uVA8BA,SAAeA,EAAqBC,GAApC,iBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACsBE,IAAeC,KAAK,WAD1C,cACQC,EADR,kBAAAJ,EAAA,MAE4BI,EAAMC,OAAON,IAFzC,OAEQO,EAFR,OAGEC,QAAQC,IAAIF,GAHd,qCAMA,IAAMG,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,mBAjChB,WACE,IAAMC,EAASC,mBAAQ,kBAAM,IAAIC,aAAc,IACzCC,EAAWC,mBAFJ,EAGaC,mBAAS,IAHtB,mBAGNC,EAHM,KAGCC,EAHD,KAKPC,EAAoBC,uBAAY,gBAAmBC,EAAnB,cAAEC,OAASC,MAAX,aACpCZ,EAAOa,cAAcH,KACrB,CAACV,IAWH,OARAc,qBAAU,WACRd,EAAOe,iBAAiB,QAAQ,6BAAA7B,EAAAC,OAAA,uDAAyB6B,EAAzB,EAAQL,OAASM,OAC/CV,EAASS,GADqB,WAAA9B,EAAA,MAETF,EAAqBmB,EAASe,UAFrB,OAExBD,EAFwB,OAG9BxB,QAAQC,IAAIuB,GAHkB,0CAK/B,CAACjB,IAGF,oCACE,6BAAK,2BAAOmB,KAAK,OAAOC,SAAUZ,KAClC,yBAAKa,MAAO,CAACC,SAAU,OAAQN,IAAKV,EAAOiB,IAAKpB,EAAUqB,IAAI,QAYpD,MAAS7B,I","file":"static/js/main.65d96aab.chunk.js","sourcesContent":["import React, {useCallback, useEffect, useMemo, useState, useRef} from 'react';\nimport ReactDOM from 'react-dom';\nimport objectDetector from '@cloud-annotations/object-detection';\n\nfunction App() {\n  const reader = useMemo(() => new FileReader(), []);\n  const imageRef = useRef();\n  const [image, setImage] = useState('');\n\n  const handleImageChange = useCallback(({target: {files: [selectedFile]}}) =>\n    reader.readAsDataURL(selectedFile),\n    [reader]\n  );\n\n  useEffect(() => {\n    reader.addEventListener('load', async ({target: {result: src}}) => {\n      setImage(src);\n      const result = await detectObjectsInImage(imageRef.current);\n      console.log(result);\n    });\n  }, [reader]);\n\n  return (\n    <>\n      <div><input type=\"file\" onChange={handleImageChange} /></div>\n      <img style={{maxWidth: '50%'}} src={image} ref={imageRef} alt=\"\" />\n    </>\n  );\n}\n\nasync function detectObjectsInImage(imageNode) {\n  const model = await objectDetector.load('/model');\n  const predictions = await model.detect(imageNode);\n  console.log(predictions);\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}